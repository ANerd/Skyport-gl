#include "GameState.h"

const ColorF PlayerState::Colors[16] = {
    ColorF(0.8666666666666667,  0.8666666666666667,  0.8666666666666667,  1.0),
    ColorF(0.8588235294117647,  0.49019607843137253, 0.24313725490196078, 1.0),
    ColorF(0.7019607843137254,  0.3137254901960784,  0.7372549019607844,  1.0),
    ColorF(0.4196078431372549,  0.5411764705882353,  0.788235294117647,   1.0),
    ColorF(0.6941176470588235,  0.6509803921568628,  0.15294117647058825, 1.0),
    ColorF(0.2549019607843137,  0.6823529411764706,  0.2196078431372549,  1.0),
    ColorF(0.8156862745098039,  0.5176470588235295,  0.6,                 1.0),
    ColorF(0.25098039215686274, 0.25098039215686274, 0.25098039215686274, 1.0),
    ColorF(0.6039215686274509,  0.6313725490196078,  0.6313725490196078,  1.0),
    ColorF(0.1803921568627451,  0.43137254901960786, 0.5372549019607843,  1.0),
    ColorF(0.49411764705882355, 0.23921568627450981, 0.7098039215686275,  1.0),
    ColorF(0.1803921568627451,  0.2196078431372549,  0.5529411764705883,  1.0),
    ColorF(0.30980392156862746, 0.19607843137254902, 0.12156862745098039, 1.0),
    ColorF(0.20784313725490197, 0.27450980392156865, 0.10588235294117647, 1.0),
    ColorF(0.5882352941176471,  0.20392156862745098, 0.18823529411764706, 1.0),
    ColorF(0.09803921568627451, 0.08627450980392157, 0.08627450980392157, 1.0)
};

uint StrSum(std::string name)
{
    uint sum = 0;
    for(auto it = name.begin(); it != name.end(); it++)
    {
        sum += *it;
    }
    return sum;
}

void GameState::SetPlayer(std::string name, uint health, uint score, 
        anengine::VectorI2 pos)
{
    if(myTurn == 0)
    {
        myPlayers.push_back(PlayerState(myPlayerIndex++, name, health, score, pos));
    }
    else
    {
        for(auto it = myPlayers.begin(); it != myPlayers.end(); it++)
        {
            if(it->Name == name)
            {
                it->Health = health;
                it->Score = score;
                it->Position = pos;
                it->Index = myPlayerIndex++;
                break;
            }
        }
    }
}
